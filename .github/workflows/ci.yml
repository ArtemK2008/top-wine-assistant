name: CI

on:
  push:
    branches: [ main, master, develop, 'feature/**' ]
  pull_request:
    branches: [ main, master, develop ]
  workflow_dispatch: { }

env:
  SPRING_PROFILES_ACTIVE: dev
  DB_HOST: postgres
  DB_PORT: 5432
  DB_NAME: topwine
  DB_USER: topwine
  DB_PASSWORD: topwine

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_DB: topwine
          POSTGRES_USER: topwine
          POSTGRES_PASSWORD: topwine
        # Health check helps, but we still add a small retry around Liquibase below.
        options: >-
          --health-cmd="pg_isready -U topwine -d topwine"
          --health-interval=5s
          --health-timeout=3s
          --health-retries=10

    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: gradle

      - name: Normalize gradlew line endings & make executable
        run: |
          sed -i 's/\r$//' gradlew
          chmod +x gradlew

      - name: Gradle version
        run: ./gradlew --version

      # --- Make sure Liquibase can reach Postgres (retry a few times) ---
      - name: Apply Liquibase migrations (retry)
        env:
          # pass through DB_* env vars to the Gradle process explicitly (optional but clear)
          DB_HOST: ${{ env.DB_HOST }}
          DB_PORT: ${{ env.DB_PORT }}
          DB_NAME: ${{ env.DB_NAME }}
          DB_USER: ${{ env.DB_USER }}
          DB_PASSWORD: ${{ env.DB_PASSWORD }}
        shell: bash
        run: |
          set -e
          # Give the service a moment even if health says "healthy"
          for i in {1..20}; do
            echo "Liquibase attempt $i..."
            if ./gradlew --no-daemon liquibaseUpdate; then
              echo "Liquibase migrations applied."
              exit 0
            fi
            echo "Liquibase not ready yet, sleeping 3s..."
            sleep 3
          done
          echo "Liquibase failed after retries"; exit 1

      # Build will trigger jOOQ codegen as part of compilation (nu.studer hooks)
      - name: Build & test
        run: ./gradlew --no-daemon clean test build

      - name: Upload test report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: junit-report
          path: build/reports/tests/test

      - name: Upload jar
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: app-jar
          path: build/libs/*.jar
