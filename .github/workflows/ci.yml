name: CI

on:
  push:
    branches: [ main, master, develop, 'feature/**' ]
  pull_request:
    branches: [ main, master, develop ]
  workflow_dispatch: {}

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    # Spin up Postgres as a service container
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_DB: topwine
          POSTGRES_USER: ${{ secrets.CI_DB_USER }}
          POSTGRES_PASSWORD: ${{ secrets.CI_DB_PASSWORD }}
        options: >-
          --health-cmd="pg_isready -U ${{ secrets.CI_DB_USER }} -d topwine"
          --health-interval=5s
          --health-timeout=3s
          --health-retries=10
        ports:
          - 5432:5432

    # These env vars are read by your Spring config and jOOQ codegen
    env:
      SPRING_PROFILES_ACTIVE: dev
      DB_HOST: localhost
      DB_PORT: 5432
      DB_NAME: topwine
      DB_USER: ${{ secrets.CI_DB_USER }}
      DB_PASSWORD: ${{ secrets.CI_DB_PASSWORD }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: gradle

      - name: Normalize gradlew & make executable
        run: |
          sed -i 's/\r$//' gradlew
          chmod +x gradlew

      # (Optional) Extra wait loop; services.healthcheck usually suffices
      - name: Wait for Postgres (extra safety)
        run: |
          for i in {1..30}; do
            (echo > /dev/tcp/127.0.0.1/5432) >/dev/null 2>&1 && echo "Postgres is up" && break
            echo "Waiting for Postgres..."; sleep 2
          done

      - name: Gradle build (includes jOOQ codegen)
        run: ./gradlew --no-daemon clean generateJooq test build

      - name: Upload test report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: junit-report
          path: build/reports/tests/test

      - name: Upload jar
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: app-jar
          path: build/libs/*.jar
